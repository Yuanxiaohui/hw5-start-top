// Generated by CoffeeScript 1.8.0
(function() {
  var RandomRobot, aHandler, addModify, bHandler, bubbleHandler, cHandler, calculate, callback, callback4, color, dHandler, disable, eHandler, enable, k, liList, modifyLabel, reset, robot, setBubbleEnable, setLabel, showMessage;

  k = $("#control-ring li");

  reset = function() {
    return 0;
  };

  modifyLabel = function(unread, data) {
    unread.innerHTML = data;
    return 0;
  };

  enable = function() {
    var li, liList, _i, _len;
    liList = $("#control-ring li");
    for (_i = 0, _len = liList.length; _i < _len; _i++) {
      li = liList[_i];
      if (!$(li).find("[class=unread]").get(0)) {
        color("rgba(61,40,166,1)", li);
      }
    }
    return 0;
  };

  calculate = function() {
    var add, span, sum, _i, _len, _ref;
    sum = 0;
    add = function(span) {
      return sum = sum + parseInt(span.innerHTML);
    };
    _ref = $("[class=unread] span");
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      span = _ref[_i];
      add(span);
    }
    $(".info").css("background-color", "grey");
    $("#info-bar").unbind("click");
    return sum;
  };

  setBubbleEnable = function() {
    color("rgba(61,40,166,1)", ".info");
    return $("#info-bar").click(bubbleHandler);
  };

  callback = function(data, textStatus) {
    var UnreadList, unread, _i, _len;
    UnreadList = $("[class=unread] span");
    for (_i = 0, _len = UnreadList.length; _i < _len; _i++) {
      unread = UnreadList[_i];
      if (unread.innerHTML === "...") {
        modifyLabel(unread, data);
      }
    }
    enable();
    if ($("li [class=unread]").length === 5) {
      setBubbleEnable();
      $("#control-ring").unbind("click");
    }
    return 0;
  };

  callback4 = function(data, curSum, tarNum) {
    var UnreadList, error, exception, unread, _i, _len;
    UnreadList = $("[class=unread] span");
    for (_i = 0, _len = UnreadList.length; _i < _len; _i++) {
      unread = UnreadList[_i];
      if (!(unread.innerHTML === "...")) {
        continue;
      }
      modifyLabel(unread, data);
      curSum += parseInt(data);
      break;
    }
    enable();
    exception = Math.floor(Math.random() * 2);
    error = '';
    if (exception > 0) {
      error = "？不！";
    }
    switch (tarNum) {
      case 0:
        showMessage("这是个天大的秘密" + error);
        break;
      case 1:
        showMessage("我不知道" + error);
        break;
      case 2:
        showMessage("你不知道" + error);
        break;
      case 3:
        showMessage("他不知道" + error);
        break;
      case 4:
        showMessage("才怪" + error);
    }
    if ($("li [class=unread]").length === 5) {
      bubbleHandler(curSum);
    } else {
      robot($("li [class=unread]").length, curSum);
    }
    return 0;
  };

  color = function(colorName, li) {
    return $(li).css("background-color", "" + colorName);
  };

  disable = function() {
    var li, liList, _i, _len;
    liList = $("#control-ring li");
    for (_i = 0, _len = liList.length; _i < _len; _i++) {
      li = liList[_i];
      color("grey", li);
    }
    $("#control-ring").unbind("click");
    return 0;
  };

  addModify = function(e) {
    var tar;
    tar = e.target || window.target;
    if (!$(tar).find("span").get(0)) {
      tar = tar.parentNode;
    }
    if (!$(tar).find("[class=unread]").get(0)) {
      setLabel(tar);
      $.get("/", callback);
      return disable();
    }
  };

  setLabel = function(tar) {
    var unread;
    unread = $("<div class='unread'><span>...</span></div>");
    $(tar).append(unread.get(0));
    return 0;
  };

  showMessage = function(str) {
    var msg;
    msg = $("<span>" + str + "</span>");
    $("#msg").append(msg);
    return console.log(str);
  };

  aHandler = function(tar, curremntSum) {
    if (!$(tar).find("[class=unread]").get(0)) {
      setLabel(tar);
      $.get("/", function(data) {
        return callback4(data, curremntSum, 0);
      });
      return disable();
    }
  };

  bHandler = function(tar, curremntSum) {
    if (!$(tar).find("[class=unread]").get(0)) {
      setLabel(tar);
      $.get("/", function(data) {
        return callback4(data, curremntSum, 1);
      });
      return disable();
    }
  };

  cHandler = function(tar, curremntSum) {
    if (!$(tar).find("[class=unread]").get(0)) {
      setLabel(tar);
      $.get("/", function(data) {
        return callback4(data, curremntSum, 2);
      });
      return disable();
    }
  };

  dHandler = function(tar, curremntSum) {
    if (!$(tar).find("[class=unread]").get(0)) {
      setLabel(tar);
      $.get("/", function(data) {
        return callback4(data, curremntSum, 3);
      });
      return disable();
    }
  };

  eHandler = function(tar, curremntSum) {
    if (!$(tar).find("[class=unread]").get(0)) {
      setLabel(tar);
      $.get("/", function(data) {
        return callback4(data, curremntSum, 4);
      });
      return disable();
    }
  };

  bubbleHandler = function(sum) {
    var tar;
    tar = $(".info-bar").get(0);
    return showMessage("楼主异步调用战斗力感人，目测不超过" + sum);
  };

  robot = function(seq, curremntSum) {
    var curIndex, newList, tar, _i;
    if (seq > 4) {
      return 0;
    }
    newList = $("#seqNum").html().split("");
    for (k = _i = 0; _i <= 4; k = ++_i) {
      switch (newList[k]) {
        case "A":
          newList[k] = 0;
          break;
        case 'B':
          newList[k] = 1;
          break;
        case 'C':
          newList[k] = 2;
          break;
        case 'D':
          newList[k] = 3;
          break;
        case 'E':
          newList[k] = 4;
      }
    }
    curIndex = newList[seq];
    tar = $("#control-ring li").get(curIndex);
    switch (seq) {
      case 0:
        return aHandler(tar, curremntSum);
      case 1:
        return bHandler(tar, curremntSum);
      case 2:
        return cHandler(tar, curremntSum);
      case 3:
        return dHandler(tar, curremntSum);
      case 4:
        return eHandler(tar, curremntSum);
    }
  };

  RandomRobot = function() {
    var cur, curSeq, item, newList, numList, str, _i, _len;
    numList = ["A", "B", "C", "D", "E"];
    str = "";
    newList = [];
    while (newList.length < 5) {
      cur = Math.floor(Math.random() * 5);
      k = true;
      for (_i = 0, _len = newList.length; _i < _len; _i++) {
        item = newList[_i];
        if (item === cur) {
          k = false;
        }
      }
      if (k) {
        newList.push(cur);
        str += numList[cur];
      }
    }
    curSeq = $("<span id='seqNum'>" + str + "</span>");
    $(".info").append(curSeq);
    $(".icon").unbind("click");
    return robot(0, 0);
  };

  $(".icon").click(RandomRobot);

  $(".icon").bind("onmouseover", "reset()");

  liList = $("#control-ring li");

  $(liList.get(0)).click(aHandler);

  $(liList.get(1)).click(bHandler);

  $(liList.get(2)).click(cHandler);

  $(liList.get(3)).click(dHandler);

  $(liList.get(4)).click(eHandler);

}).call(this);


//# sourceMappingURL=ajax.js.map
