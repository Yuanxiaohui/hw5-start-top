// Generated by LiveScript 1.3.1
(function(){
  var Button, allButtonsAbleToBeClickedToFetchNumber, buttonsInit, bubbleAbleToBeClickedToGetSum, getButtonsSum, addResettingWhenLeavingApb, reset, setBubbleAbleToBeClicked, bubbleInit, S1WaitUserClick;
  $(function(){
    allButtonsAbleToBeClickedToFetchNumber();
    bubbleAbleToBeClickedToGetSum();
    addResettingWhenLeavingApb();
    return S1WaitUserClick();
  });
  Button = (function(){
    Button.displayName = 'Button';
    var prototype = Button.prototype, constructor = Button;
    Button.buttons = [];
    function Button(dom){
      var this$ = this;
      this.dom = dom;
      this.state = 'enabled';
      this.dom.addClass('enabled');
      this.dom.click(function(){
        if (this$.dom.hasClass('enabled')) {
          this$.constructor.disableOtherButtons(this$);
          this$.wait();
          this$.buttonFetchNumberFromServerAndShow();
        }
      });
      this.constructor.buttons.push(this);
    }
    Button.disableOtherButtons = function(thisButton){
      var i$, ref$, len$, button, results$ = [];
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== thisButton) {
          if (button.state !== 'done') {
            if (button.dom[0].children[1].innerHTML === '') {
              button.dom[0].children[1].style.visibility = 'collapse';
            }
            results$.push(button.disable());
          }
        }
      }
      return results$;
    };
    Button.enableOtherButtons = function(thisButton){
      var i$, ref$, len$, button, results$ = [];
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== thisButton) {
          if (button.state !== 'done') {
            button.dom[0].children[1].style.visibility = '';
            results$.push(button.enable());
          }
        }
      }
      return results$;
    };
    Button.allButtonsAreDone = function(){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button.state !== 'done') {
          return false;
        }
      }
      return true;
    };
    Button.resetAll = function(){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        button.reset();
      }
    };
    prototype.buttonFetchNumberFromServerAndShow = function(){
      var this$ = this;
      $.get('/', function(number, result){
        if (this$.state === 'waiting') {
          this$.done();
        }
        if (this$.constructor.allButtonsAreDone()) {
          setBubbleAbleToBeClicked();
        }
        this$.constructor.enableOtherButtons(this$);
        this$.buttonShowNumber(number);
      });
    };
    prototype.buttonShowNumber = function(number){
      this.dom.find('.unread').text(number);
    };
    prototype.disable = function(){
      this.state = 'disabled';
      this.dom.removeClass('enabled').addClass('disabled');
    };
    prototype.enable = function(){
      this.state = 'enabled';
      this.dom.removeClass('disabled').addClass('enabled');
    };
    prototype.wait = function(){
      this.state = 'waiting';
      this.dom.removeClass('enabled').addClass('waiting');
    };
    prototype.done = function(){
      this.state = 'done';
      this.dom.removeClass('waiting').addClass('done');
    };
    prototype.reset = function(){
      this.state = 'enabled';
      this.dom.removeClass('disabled waiting done').addClass('enabled');
      this.dom.find('.unread').text('');
    };
    return Button;
  }());
  allButtonsAbleToBeClickedToFetchNumber = function(){
    buttonsInit();
  };
  buttonsInit = function(){
    var buttons, i$, len$, bt, button;
    buttons = $('#control-ring .button');
    for (i$ = 0, len$ = buttons.length; i$ < len$; ++i$) {
      bt = buttons[i$];
      button = new Button($(bt));
    }
  };
  bubbleAbleToBeClickedToGetSum = function(){
    var bubble, this$ = this;
    bubbleInit();
    bubble = $('#info-bar');
    bubble.click(function(){
      if (bubble.hasClass('enabled')) {
        bubble.find('.amount').text(getButtonsSum());
        bubble.removeClass('enabled').addClass('disabled');
      }
    });
  };
  getButtonsSum = function(){
    var sum, i$, ref$, len$, button;
    sum = 0;
    for (i$ = 0, len$ = (ref$ = $('#control-ring .button')).length; i$ < len$; ++i$) {
      button = ref$[i$];
      sum += parseInt(button.children[1].innerHTML.toString());
    }
    return sum;
  };
  addResettingWhenLeavingApb = function(){
    var isEnteringOther;
    isEnteringOther = false;
    $('#info-bar, #control-ring-container, .apb').on('mouseenter', function(){
      isEnteringOther = true;
    });
    $('#info-bar, #control-ring-container').on('mouseleave', function(){
      isEnteringOther = false;
      setTimeout(function(){
        if (!isEnteringOther) {
          reset();
        }
      }, 0);
    });
  };
  reset = function(){
    Button.resetAll();
    bubbleInit();
  };
  setBubbleAbleToBeClicked = function(){
    var bubble;
    bubble = $('#info-bar');
    bubble.removeClass('disabled').addClass('enabled');
  };
  bubbleInit = function(){
    var bubble;
    bubble = $('#info-bar');
    bubble.removeClass('enabled').addClass('disabled');
    bubble.find('li.amount').text('');
  };
  S1WaitUserClick = function(){
    console.log('waiting user to click...');
  };
}).call(this);
