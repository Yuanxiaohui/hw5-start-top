// Generated by CoffeeScript 1.9.1
(function() {
  var $, $$, aHandler, addClickHandlerToAllButtons, allButtonsHaveDone, bHandler, bubbleHandler, cHandler, calculateResult, clickButtonInRandomOrder, dHandler, displayResultOnBubble, eHandler, failedToGetResponse, getRandomOrder, makeRequest, manualClickCallback, reset, robot, robotAllButtonsHaveDone, robotClickCallback, updateCurrentSum;

  $ = function(id) {
    return document.getElementById(id);
  };

  $$ = function(tag) {
    return document.getElementsByTagName(tag);
  };

  window.onload = function() {
    $('info-bar').className = 'bubbleDisable';
    $('info-bar').onclick = function() {
      if (allButtonsHaveDone()) {
        this.innerHTML = calculateResult();
      }
      return this.className = 'bubbleDisable';
    };
    $('button').onmouseout = function() {
      var e, reltg;
      e = window.event;
      reltg = (e.relatedTarget ? e.relatedTarget : e.toElement);
      while (reltg && reltg !== this) {
        reltg = reltg.parentNode;
      }
      if (reltg !== this) {
        return reset();
      }
    };
    document.getElementsByClassName('icon')[0].onclick = function() {
      reset();
      return robot();
    };
    return addClickHandlerToAllButtons();
  };

  addClickHandlerToAllButtons = function() {
    var item, k, len, ref, results;
    ref = $$('button');
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      item = ref[k];
      results.push(item.onclick = function() {
        var l, len1, otherItem, ref1;
        this.innerHTML = this.innerHTML + "<span class='unread'>...</span>";
        this.disabled = 'disabled';
        ref1 = $$('button');
        for (l = 0, len1 = ref1.length; l < len1; l++) {
          otherItem = ref1[l];
          if (otherItem !== this) {
            if (!otherItem.getElementsByTagName('span')[0]) {
              otherItem.className = 'disable';
              otherItem.disabled = 'disabled';
            }
          }
        }
        return makeRequest(this.id, manualClickCallback);
      });
    }
    return results;
  };

  makeRequest = function(id, callback) {
    var xmlHttp;
    xmlHttp = new XMLHttpRequest();
    xmlHttp.onreadystatechange = function() {
      if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {
        return callback(xmlHttp.responseText, id);
      }
    };
    xmlHttp.open('GET', '/', true);
    return xmlHttp.send(null);
  };

  manualClickCallback = function(number, id) {
    var k, len, otherItem, ref, thisButton;
    thisButton = $(id);
    if (thisButton.getElementsByTagName('span')[0]) {
      thisButton.innerHTML = thisButton.innerHTML.replace('...', number);
      thisButton.className = 'disable';
      thisButton.disabled = 'disabled';
      ref = $$('button');
      for (k = 0, len = ref.length; k < len; k++) {
        otherItem = ref[k];
        if (otherItem !== thisButton && !otherItem.getElementsByTagName('span')[0]) {
          otherItem.className = 'active';
          otherItem.disabled = '';
        }
      }
      if (allButtonsHaveDone()) {
        return displayResultOnBubble();
      }
    }
  };

  allButtonsHaveDone = function() {
    var flag, item, k, len, ref;
    flag = true;
    ref = $$('button');
    for (k = 0, len = ref.length; k < len; k++) {
      item = ref[k];
      if (!item.getElementsByTagName('span')[0] || item.getElementsByTagName('span')[0] === '...') {
        flag = false;
      }
    }
    return flag;
  };

  calculateResult = function() {
    var item, k, len, ref, result;
    result = 0;
    ref = $$('button');
    for (k = 0, len = ref.length; k < len; k++) {
      item = ref[k];
      result += parseInt(item.getElementsByTagName('span')[0].innerHTML);
    }
    return result;
  };

  reset = function() {
    var button, k, len, ref, results;
    $('message').innerHTML = '';
    $('info-bar').innerHTML = '';
    $('info-bar').className = 'bubbleDisable';
    ref = $$('button');
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      button = ref[k];
      button.className = 'active';
      button.disabled = '';
      if (button.getElementsByTagName('span')[0] != null) {
        results.push(button.removeChild(button.getElementsByTagName('span')[0]));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  displayResultOnBubble = function() {
    return $('info-bar').className = 'bubbleActive';
  };

  getRandomOrder = function() {
    var i, item, j, k, len, rand, str, temp, val;
    rand = [];
    i = 0;
    while (i < 5) {
      val = Math.floor(Math.random() * 5);
      j = 0;
      temp = rand.length;
      while (j < rand.length) {
        if (rand[j] === val) {
          break;
        }
        j++;
      }
      if (j === temp) {
        rand[j] = val;
      } else {
        i--;
      }
      i++;
    }
    str = '';
    for (k = 0, len = rand.length; k < len; k++) {
      item = rand[k];
      switch (item) {
        case 0:
          str += 'A';
          break;
        case 1:
          str += 'B';
          break;
        case 2:
          str += 'C';
          break;
        case 3:
          str += 'D';
          break;
        case 4:
          str += 'E';
          break;
        default:
          console.log('RANDOM ERROR!');
      }
    }
    $('info-bar').innerHTML = str;
    return rand;
  };

  robot = function() {
    var rand;
    rand = getRandomOrder();
    return clickButtonInRandomOrder(rand, 0, 0);
  };

  robotClickCallback = function(number, id) {
    var k, len, otherItem, ref, thisButton;
    thisButton = $(id);
    if (thisButton.getElementsByTagName('span')[0]) {
      thisButton.innerHTML = thisButton.innerHTML.replace('...', number);
      thisButton.className = 'disable';
      thisButton.disabled = 'disabled';
      ref = $$('button');
      for (k = 0, len = ref.length; k < len; k++) {
        otherItem = ref[k];
        if (otherItem !== thisButton && !otherItem.getElementsByTagName('span')[0]) {
          otherItem.className = 'active';
          otherItem.disabled = '';
        }
      }
      if (robotAllButtonsHaveDone()) {
        return displayResultOnBubble();
      }
    }
  };

  robotAllButtonsHaveDone = function() {
    var flag, item, k, len, ref;
    flag = true;
    ref = $$('button');
    for (k = 0, len = ref.length; k < len; k++) {
      item = ref[k];
      if (!item.getElementsByTagName('span')[0]) {
        flag = false;
      }
    }
    return flag;
  };

  clickButtonInRandomOrder = function(rand, currentSum, indexInRand) {
    var indexInButtons, robotHandler;
    if (indexInRand === 5) {
      return bubbleHandler(currentSum);
    } else {
      robotHandler = function(error, sum, arr, index) {
        if (error !== null) {
          console.log(error);
        }
        return clickButtonInRandomOrder(arr, sum, index + 1);
      };
      indexInButtons = rand[indexInRand];
      switch (indexInButtons) {
        case 0:
          return aHandler(currentSum, robotHandler, rand, indexInRand);
        case 1:
          return bHandler(currentSum, robotHandler, rand, indexInRand);
        case 2:
          return cHandler(currentSum, robotHandler, rand, indexInRand);
        case 3:
          return dHandler(currentSum, robotHandler, rand, indexInRand);
        case 4:
          return eHandler(currentSum, robotHandler, rand, indexInRand);
      }
    }
  };


  /*
  enableButtons = ->
  	for item in $$ 'button'
  		if not item.getElementsByTagName('span')[0]
  			item.className = 'active'
  			item.disabled = ''
   */

  failedToGetResponse = function() {
    return Math.random() > 0.5;
  };

  updateCurrentSum = function(currentSum) {
    var bubble, str;
    str = '';
    bubble = $('info-bar');
    if (bubble.innerHTML.indexOf('<br>')) {
      str = bubble.innerHTML.split('<')[0];
      str = str + ("<br> " + currentSum);
      return bubble.innerHTML = str;
    } else {
      return bubble.innerHTML = bubble.innerHTML + " <br> " + currentSum;
    }
  };

  aHandler = function(currentSum, robotHandler, rand, index) {
    var failed, k, len, otherItem, ref;
    $('a').innerHTML = $('a').innerHTML + "<span class='unread'>...</span>";
    $('a').disabled = 'disabled';
    ref = $$('button');
    for (k = 0, len = ref.length; k < len; k++) {
      otherItem = ref[k];
      if (otherItem !== $('a')) {
        if (!otherItem.getElementsByTagName('span')[0]) {
          otherItem.className = 'disable';
          otherItem.disabled = 'disabled';
        }
      }
    }
    failed = failedToGetResponse();
    if (failed) {
      $('message').innerHTML = "<strong>这不是个天大的秘密</strong>";
    } else {
      $('message').innerHTML = "这是个天大的秘密";
      makeRequest('a', robotClickCallback);
      currentSum += parseInt($('a').getElementsByTagName('span')[0].innerHTML);
    }
    updateCurrentSum(currentSum);
    if (failed) {
      return robotHandler('A failed!', currentSum, rand, index);
    } else {
      return robotHandler(null, currentSum, rand, index);
    }
  };

  bHandler = function(currentSum, robotHandler, rand, index) {
    var failed, k, len, otherItem, ref;
    $('b').innerHTML = $('b').innerHTML + "<span class='unread'>...</span>";
    $('b').disabled = 'disabled';
    ref = $$('button');
    for (k = 0, len = ref.length; k < len; k++) {
      otherItem = ref[k];
      if (otherItem !== $('b')) {
        if (!otherItem.getElementsByTagName('span')[0]) {
          otherItem.className = 'disable';
          otherItem.disabled = 'disabled';
        }
      }
    }
    failed = failedToGetResponse();
    if (failed) {
      $('message').innerHTML = "<strong>我知道</strong>";
    } else {
      $('message').innerHTML = "我不知道";
      makeRequest('b', robotClickCallback);
      currentSum += parseInt($('b').getElementsByTagName('span')[0].innerHTML);
    }
    updateCurrentSum(currentSum);
    if (failed) {
      return robotHandler('B failed!', currentSum, rand, index);
    } else {
      return robotHandler(null, currentSum, rand, index);
    }
  };

  cHandler = function(currentSum, robotHandler, rand, index) {
    var failed, k, len, otherItem, ref;
    $('c').innerHTML = $('c').innerHTML + "<span class='unread'>...</span>";
    $('c').disabled = 'disabled';
    ref = $$('button');
    for (k = 0, len = ref.length; k < len; k++) {
      otherItem = ref[k];
      if (otherItem !== $('c')) {
        if (!otherItem.getElementsByTagName('span')[0]) {
          otherItem.className = 'disable';
          otherItem.disabled = 'disabled';
        }
      }
    }
    failed = failedToGetResponse();
    if (failed) {
      $('message').innerHTML = "<strong>你知道</strong>";
    } else {
      $('message').innerHTML = "你不知道";
      makeRequest('c', robotClickCallback);
      currentSum += parseInt($('c').getElementsByTagName('span')[0].innerHTML);
    }
    updateCurrentSum(currentSum);
    if (failed) {
      return robotHandler('C failed!', currentSum, rand, index);
    } else {
      return robotHandler(null, currentSum, rand, index);
    }
  };

  dHandler = function(currentSum, robotHandler, rand, index) {
    var failed, k, len, otherItem, ref;
    $('d').innerHTML = $('d').innerHTML + "<span class='unread'>...</span>";
    $('d').disabled = 'disabled';
    ref = $$('button');
    for (k = 0, len = ref.length; k < len; k++) {
      otherItem = ref[k];
      if (otherItem !== $('d')) {
        if (!otherItem.getElementsByTagName('span')[0]) {
          otherItem.className = 'disable';
          otherItem.disabled = 'disabled';
        }
      }
    }
    failed = failedToGetResponse();
    if (failed) {
      $('message').innerHTML = "<strong>他知道</strong>";
    } else {
      $('message').innerHTML = "他不知道";
      makeRequest('d', robotClickCallback);
      currentSum += parseInt($('d').getElementsByTagName('span')[0].innerHTML);
    }
    updateCurrentSum(currentSum);
    if (failed) {
      return robotHandler('D failed!', currentSum, rand, index);
    } else {
      return robotHandler(null, currentSum, rand, index);
    }
  };

  eHandler = function(currentSum, robotHandler, rand, index) {
    var failed, k, len, otherItem, ref;
    $('e').innerHTML = $('e').innerHTML + "<span class='unread'>...</span>";
    $('e').disabled = 'disabled';
    ref = $$('button');
    for (k = 0, len = ref.length; k < len; k++) {
      otherItem = ref[k];
      if (otherItem !== $('e')) {
        if (!otherItem.getElementsByTagName('span')[0]) {
          otherItem.className = 'disable';
          otherItem.disabled = 'disabled';
        }
      }
    }
    failed = failedToGetResponse();
    if (failed) {
      $('message').innerHTML = "<strong>才怪就怪了</strong>";
    } else {
      $('message').innerHTML = "才怪";
      makeRequest('e', robotClickCallback);
      currentSum += parseInt($('e').getElementsByTagName('span')[0].innerHTML);
    }
    updateCurrentSum(currentSum);
    if (failed) {
      return robotHandler('E failed!', currentSum, rand, index);
    } else {
      return robotHandler(null, currentSum, rand, index);
    }
  };

  bubbleHandler = function(sum) {
    return $('message').innerHTML = "楼主异步调用战斗力感人，目测不超过 " + sum;
  };

}).call(this);
