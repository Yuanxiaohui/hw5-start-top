// Generated by LiveScript 1.3.1
(function(){
  var resetAllCirclesWhenMouseout, addClickToAndDisableSumCircle, addClickToAndEnableSmallCircle, clickSmallCircle, ajaxGetNumber, displayNumber, getSmallCircles, disableOtherCircles, enableOtherCircles, allCircleReset, clickSumCircle, getSum, showSum, allSmallCirclesInactive, sumCircleActive, wait, done, disable, enable, smallCircleReset, sumCircleReset, s2AddClickToAplusCircle, s2Robot, s2RobotCallback, s2NextCircle, getCircleNumber, s3AddClickToAplusCircle, s3Robot, s4AddClickToAplusCircle, s4Robot, transformOrder, randomizeOrder, showOrder, s4RobotCallback, s5AddClickToAplusCircle, s5Robot, s5RobotCallback, showMessage, showFinalMessage;
  $(function(){
    resetAllCirclesWhenMouseout();
    addClickToAndDisableSumCircle();
    addClickToAndEnableSmallCircle();
    s5AddClickToAplusCircle();
  });
  resetAllCirclesWhenMouseout = function(){
    $('#part0').mouseleave(allCircleReset);
  };
  addClickToAndDisableSumCircle = function(){
    $('#sum-circle').addClass('disable').click(clickSumCircle);
  };
  addClickToAndEnableSmallCircle = function(){
    var i$, ref$, len$, circle;
    for (i$ = 0, len$ = (ref$ = getSmallCircles()).length; i$ < len$; ++i$) {
      circle = ref$[i$];
      circle.addClass('enable').click(clickSmallCircle(circle));
    }
  };
  clickSmallCircle = function(circle, callback, order, goodMessage, badMessage, cumulateSum){
    return function(){
      if (!circle.hasClass('enable')) {
        return;
      }
      wait(circle);
      disableOtherCircles();
      ajaxGetNumber(circle, callback, order, goodMessage, badMessage, cumulateSum);
    };
  };
  ajaxGetNumber = function(circle, callback, order, goodMessage, badMessage, cumulateSum){
    $.get('/' + Math.random(), function(number, result){
      if (!circle.hasClass('waiting')) {
        return;
      }
      displayNumber(circle, number);
      done(circle);
      enableOtherCircles();
      if (allSmallCirclesInactive()) {
        sumCircleActive();
      }
      if (!isNaN(cumulateSum)) {
        cumulateSum += parseInt(number);
        showSum(cumulateSum);
      }
      if (goodMessage) {
        if (Math.random() > 0.3) {
          showMessage(goodMessage[5 - order.length]);
        } else {
          showMessage(badMessage[5 - order.length]);
        }
      }
      if (typeof callback == 'function') {
        callback(circle, order, goodMessage, badMessage, cumulateSum);
      }
    });
  };
  displayNumber = function(circle, number){
    circle.find('.text').text(number);
  };
  getSmallCircles = function(){
    var i$, i, results$ = [];
    for (i$ = 0; i$ <= 4; ++i$) {
      i = i$;
      results$.push($('#circle' + i.toString()));
    }
    return results$;
  };
  disableOtherCircles = function(){
    var i$, ref$, len$, circle;
    for (i$ = 0, len$ = (ref$ = getSmallCircles()).length; i$ < len$; ++i$) {
      circle = ref$[i$];
      if (circle.hasClass('enable')) {
        disable(circle);
      }
    }
  };
  enableOtherCircles = function(){
    var i$, ref$, len$, circle;
    for (i$ = 0, len$ = (ref$ = getSmallCircles()).length; i$ < len$; ++i$) {
      circle = ref$[i$];
      if (circle.hasClass('disable')) {
        enable(circle);
      }
    }
  };
  allCircleReset = function(){
    smallCircleReset();
    sumCircleReset();
  };
  clickSumCircle = function(){
    if ($('#sum-circle').hasClass('disable')) {
      return;
    }
    showSum(getSum());
  };
  getSum = function(){
    var circles, sum, i$, i;
    circles = getSmallCircles();
    sum = 0;
    for (i$ = 0; i$ <= 4; ++i$) {
      i = i$;
      sum += parseInt(circles[i].find('.text').text());
    }
    return sum;
  };
  showSum = function(sum){
    $('#sum-circle #sum').text(sum.toString());
  };
  allSmallCirclesInactive = function(){
    var i$, i;
    for (i$ = 0; i$ <= 4; ++i$) {
      i = i$;
      if (!$('#circle' + i.toString()).hasClass('done')) {
        return false;
      }
    }
    return true;
  };
  sumCircleActive = function(){
    enable($('#sum-circle'));
  };
  wait = function(circle){
    circle.find('.text').text('...');
    circle.removeClass('enable').addClass('waiting');
  };
  done = function(circle){
    circle.removeClass('waiting').addClass('done');
  };
  disable = function(circle){
    circle.removeClass('enable').addClass('disable');
  };
  enable = function(circle){
    circle.removeClass('disable').addClass('enable');
  };
  smallCircleReset = function(){
    var i$, ref$, len$, circle;
    for (i$ = 0, len$ = (ref$ = getSmallCircles()).length; i$ < len$; ++i$) {
      circle = ref$[i$];
      circle.removeClass('disable waiting done').addClass('enable');
    }
  };
  sumCircleReset = function(){
    var sumCircle;
    sumCircle = $('#sum-circle');
    sumCircle.children().text('');
    disable(sumCircle);
  };
  s2AddClickToAplusCircle = function(){
    $('#image2').click(s2Robot);
  };
  s2Robot = function(){
    clickSmallCircle($('#circle0'), s2RobotCallback)();
  };
  s2RobotCallback = function(circle){
    if (circle.attr('id') === 'circle4') {
      clickSumCircle();
    } else {
      clickSmallCircle(s2NextCircle(circle), s2RobotCallback)();
    }
  };
  s2NextCircle = function(circle){
    return $('#circle' + (getCircleNumber(circle) + 1).toString());
  };
  getCircleNumber = function(circle){
    return parseInt(circle.attr('id')[6]);
  };
  s3AddClickToAplusCircle = function(){
    $('#image2').click(s3Robot);
  };
  s3Robot = function(){
    var i$, ref$, len$, circle;
    for (i$ = 0, len$ = (ref$ = getSmallCircles()).length; i$ < len$; ++i$) {
      circle = ref$[i$];
      clickSmallCircle(circle, clickSumCircle)();
      enableOtherCircles();
    }
  };
  s4AddClickToAplusCircle = function(){
    $('#image2').click(s4Robot);
  };
  s4Robot = function(){
    var order;
    if ($('#sum-circle #order').text() !== '') {
      return;
    }
    order = randomizeOrder();
    showOrder(order);
    clickSmallCircle(transformOrder(order.shift()), s4RobotCallback, order)();
  };
  transformOrder = function(singleOrder){
    return $('#circle' + (singleOrder.charCodeAt() - 'A'.charCodeAt()).toString());
  };
  randomizeOrder = function(){
    return ["A", "B", "C", "D", "E"].sort(function(){
      return 0.5 - Math.random();
    });
  };
  showOrder = function(order){
    $('#sum-circle #order').text(order.join(','));
  };
  s4RobotCallback = function(circle, order){
    if (order.length === 0) {
      clickSumCircle();
    } else {
      clickSmallCircle(transformOrder(order.shift()), s4RobotCallback, order)();
    }
  };
  s5AddClickToAplusCircle = function(){
    $('#image2').click(s5Robot);
  };
  s5Robot = function(){
    var goodMessage, badMessage, cumulateSum, order;
    if ($('#sum-circle #order').text() !== '') {
      return;
    }
    goodMessage = ['这是个天大的秘密', '我不知道', '你不知道', '他不知道', '才怪'];
    badMessage = ['这不是个天大的秘密', '我知道', '你知道', '他知道', '才不怪'];
    cumulateSum = 0;
    order = randomizeOrder();
    showOrder(order);
    clickSmallCircle(transformOrder(order.shift()), s5RobotCallback, order, goodMessage, badMessage, cumulateSum)();
  };
  s5RobotCallback = function(circle, order, goodMessage, badMessage, cumulateSum){
    if (order.length === 0) {
      showFinalMessage(cumulateSum);
    } else {
      clickSmallCircle(transformOrder(order.shift()), s5RobotCallback, order, goodMessage, badMessage, cumulateSum)();
    }
  };
  showMessage = function(message){
    $('#sum-circle #message').text(message);
  };
  showFinalMessage = function(cumulateSum){
    $('#sum-circle #message').text('楼主异步调用战斗力感人，目测不超过' + cumulateSum.toString());
  };
}).call(this);
