// Generated by LiveScript 1.3.1
(function(){
  var enableRandomClick, disableRandomClick, disableInfoBar, enableBtn, disableBtn, disableOtherBtn, enableOtherBtn, checkReady, errorOccur, shuffle, showOrder, switchHandler, aHandler, bHandler, cHandler, dHandler, eHandler, bigHandler, setBtnWait, showMessage;
  window.onload = function(){
    return reset();
  };
  enableRandomClick = function(){
    return $('#base')[0].setAttribute('onclick', 'randomClick()');
  };
  disableRandomClick = function(){
    return $('#base')[0].setAttribute('onclick', '');
  };
  disableInfoBar = function(){
    return $('#info-bar')[0].setAttribute('onclick', '');
  };
  enableBtn = function(btn){
    btn.setAttribute('onclick', 'getRandomNum(this)');
    return btn.style.backgroundColor = 'blue';
  };
  disableBtn = function(btn){
    btn.setAttribute('onclick', '');
    return btn.style.backgroundColor = '#666';
  };
  disableOtherBtn = function(){
    var i$, ref$, len$, btn, results$ = [];
    for (i$ = 0, len$ = (ref$ = btns).length; i$ < len$; ++i$) {
      btn = ref$[i$];
      if (!in$(btn, CLICKED)) {
        results$.push(disableBtn(btn));
      }
    }
    return results$;
  };
  enableOtherBtn = function(){
    var i$, ref$, len$, btn, results$ = [];
    for (i$ = 0, len$ = (ref$ = btns).length; i$ < len$; ++i$) {
      btn = ref$[i$];
      if (!in$(btn, CLICKED)) {
        results$.push(enableBtn(btn));
      } else {
        results$.push(disableBtn(btn));
      }
    }
    return results$;
  };
  / 人工交互时调用 /;
  this.getRandomNum = function(btn){
    var num, req;
    disableRandomClick();
    this.CLICKED = this.CLICKED.concat([btn]);
    num = btn.getElementsByClassName('num')[0];
    num.innerText = '...';
    num.style.opacity = 1;
    btn.setAttribute('onclick', '');
    disableOtherBtn();
    req = new XMLHttpRequest();
    req.open('GET', '../getRandomNum', true);
    req.send();
    return req.onreadystatechange = function(){
      if (req.readyState === 4 && req.status === 200) {
        window.NUMBERS = window.NUMBERS.concat([Number(req.response)]);
        num.innerText = req.response;
        enableOtherBtn();
        return checkReady();
      }
    };
  };
  checkReady = function(){
    if (NUMBERS.length === 5) {
      $('#info-bar')[0].setAttribute('onclick', 'showSum()');
    }
    if (NUMBERS.length === 5) {
      return true;
    }
  };
  errorOccur = function(){
    return Math.random() > 0.5;
  };
  shuffle = function(){
    if (Math.random() > 0.5) {
      return 1;
    } else {
      return -1;
    }
  };
  showOrder = function(order){
    $('#order')[0].innerText = order.join(' ');
    return $('#order')[0].style.opacity = 1;
  };
  this.randomClick = function(){
    var order, index, currentSum;
    disableRandomClick();
    disableInfoBar();
    order = ["A", "B", "C", "D", "E"].sort(shuffle);
    showOrder(order);
    index = 0;
    currentSum = 0;
    return switchHandler(order, index, currentSum);
  };
  switchHandler = function(order, index, currentSum){
    switch (order[index]) {
    case 'A':
      return aHandler(order, index, currentSum);
    case 'B':
      return bHandler(order, index, currentSum);
    case 'C':
      return cHandler(order, index, currentSum);
    case 'D':
      return dHandler(order, index, currentSum);
    case 'E':
      return eHandler(order, index, currentSum);
    }
  };
  aHandler = function(order, index, currentSum){
    var btn;
    if (errorOccur()) {
      showMessage('这不是个天大的秘密');
    }
    btn = $('.' + order[index])[0];
    return setBtnWait(btn, order, index, currentSum);
  };
  bHandler = function(order, index, currentSum){
    var btn;
    if (errorOccur) {
      showMessage('我知道');
    }
    btn = $('.' + order[index])[0];
    return setBtnWait(btn, order, index, currentSum);
  };
  cHandler = function(order, index, currentSum){
    var btn;
    if (errorOccur) {
      showMessage('你知道');
    }
    btn = $('.' + order[index])[0];
    return setBtnWait(btn, order, index, currentSum);
  };
  dHandler = function(order, index, currentSum){
    var btn;
    if (errorOccur) {
      showMessage('他知道');
    }
    btn = $('.' + order[index])[0];
    return setBtnWait(btn, order, index, currentSum);
  };
  eHandler = function(order, index, currentSum){
    var btn;
    if (errorOccur) {
      showMessage('才不怪');
    }
    btn = $('.' + order[index])[0];
    return setBtnWait(btn, order, index, currentSum);
  };
  bigHandler = function(currentSum){
    return showMessage('楼主异步调用战斗力感人，目测不超过' + currentSum);
  };
  setBtnWait = function(btn, order, index, currentSum){
    var num, req;
    this.CLICKED = this.CLICKED.concat([btn]);
    num = btn.getElementsByClassName('num')[0];
    num.innerText = '...';
    num.style.opacity = 1;
    btn.setAttribute('onclick', '');
    disableOtherBtn();
    req = new XMLHttpRequest();
    req.open('GET', '../getRandomNum', true);
    req.send();
    return req.onreadystatechange = function(){
      if (req.readyState === 4 && req.status === 200) {
        switch (order[index]) {
        case 'A':
          showMessage('这是个天大的秘密');
          break;
        case 'B':
          showMessage('我不知道');
          break;
        case 'C':
          showMessage('你不知道');
          break;
        case 'D':
          showMessage('他不知道');
          break;
        case 'E':
          showMessage('才怪');
        }
        window.NUMBERS = window.NUMBERS.concat([Number(req.response)]);
        num.innerText = req.response;
        index++;
        currentSum += Number(req.response);
        switchHandler(order, index, currentSum);
        enableOtherBtn();
        if (checkReady()) {
          showSum();
          return bigHandler(currentSum);
        }
      }
    };
  };
  this.showSum = function(){
    var result, i$, ref$, len$, item, sumSpan;
    result = 0;
    for (i$ = 0, len$ = (ref$ = NUMBERS).length; i$ < len$; ++i$) {
      item = ref$[i$];
      result += item;
    }
    sumSpan = $('#sum')[0];
    sumSpan.innerText = result;
    return sumSpan.style.opacity = 1;
  };
  this.reset = function(){
    var res$, i$, ref$, len$, ID, btn, results$ = [];
    this.CLICKED = [];
    this.NUMBERS = [];
    this.button = $('#button')[0];
    res$ = [];
    for (i$ = 0, len$ = (ref$ = ['A', 'B', 'C', 'D', 'E']).length; i$ < len$; ++i$) {
      ID = ref$[i$];
      res$.push($('.'.concat(ID))[0]);
    }
    this.btns = res$;
    button.setAttribute('onmouseleave', 'setTimeout("reset()", 1000)');
    $('#order')[0].style.opacity = 0;
    showMessage('');
    enableOtherBtn();
    enableRandomClick();
    $('#sum')[0].style.opacity = 0;
    for (i$ = 0, len$ = (ref$ = btns).length; i$ < len$; ++i$) {
      btn = ref$[i$];
      $('#info-bar')[0].setAttribute('onclick', '');
      results$.push(btn.getElementsByClassName('num')[0].style.opacity = 0);
    }
    return results$;
  };
  showMessage = function(message){
    return $('#message')[0].innerText = message;
  };
  function in$(x, xs){
    var i = -1, l = xs.length >>> 0;
    while (++i < l) if (x === xs[i]) return true;
    return false;
  }
}).call(this);
