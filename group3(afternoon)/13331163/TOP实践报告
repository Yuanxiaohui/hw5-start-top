TOP是一种面向思考的编程方式，为什么说是面向思考呢？传统的编程方式比较冗余，较多阻碍理解思考的东西
。例如变量需要先声明再使用或者就是声明的同时给出定义，就是说总会需要'var'这样的关键字，每次阅读代
码至少都需要扫它一眼，影响视觉吸收，而且多个这样的关键字使得代码篇幅大大增大，严重影响阅读代码的
效率和心情。还有更可恶的';' '{' '}'，每行打一个分号，给脑袋增加工作量，多个大括号的嵌套更使得代码
更加不容易读，这就造成了一种现象:十来行的代码才完成了一个小步骤，而且不容易阅读。正如老师所说的，
人的大脑资源是有限的，合理利用事半功倍，反之事倍功半。TOP就是一种根据所想编写功能代码的编程方式，
这里你不会受到一些无关痛痒的语法影响，让大脑更自由，更加专注于思考组织代码逻辑，而不是一些细枝末
节的东西。以上所述只是TOP的冰山一角，TOP跟多的是提供更加靠近自然语言表达能力的语法结构，例如要遍
历一个数组arr，传统的做法是利用索引i，从0递增到arr.length-1，用arr[i]
去获得具体的每一个元素，但是TOP不需要你如此繁琐，只需要简单的使用for x in arr这种语法，就能表达出
相同的功能。这就像我们所想的：对每个在数组arr中的元素进行***。还有我们只需要看到->
就能知道是函数，而不用阅读单词function，我们只要使用~>
就能解决this丢失的问题，我们只要是用let语法就能写出闭包等等，极大的方便我们的编程，减轻我们的脑负
担，使得我们的脑袋在庞大繁杂的代码中有空吸收新鲜的空气。
但是虽然说TOP有很大的好处，但是对于刚接触的我的来说，起步还是有点艰难，但是慢慢的，写完了5个小作
业后，觉得TOP确实是个好东西，简短的代码，留下关键的部分，把无关痛痒的所有障碍物去掉，看着自己的代
码真是倍儿爽，也不会有那种厌恶感，似乎每行代码都是精华，每行代码都隐藏了无穷的能量，这种感觉很是
让人舒服。
