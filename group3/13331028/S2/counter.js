// Generated by LiveScript 1.3.1
(function(){
  var Robot, Calculator, resetTheWhole, setClassDisabled, setClassAble, Buttons, getNext;
  Robot = (function(){
    Robot.displayName = 'Robot';
    var prototype = Robot.prototype, constructor = Robot;
    Robot.robotClick = false;
    prototype.S2ClickButtonInOrder = function(b){
      var icon;
      icon = $('.icon');
      icon[0].onclick = function(){
        if (constructor.robotClick === false) {
          b.getNumberForThisButton(Buttons.buttons[0]);
          return constructor.robotClick = true;
        }
      };
    };
    prototype.resetRobot = function(){
      return constructor.robotClick = false;
    };
    function Robot(){}
    return Robot;
  }());
  Calculator = (function(){
    Calculator.displayName = 'Calculator';
    var prototype = Calculator.prototype, constructor = Calculator;
    Calculator.sum = 0;
    Calculator.numOfSumed = 0;
    function Calculator(){
      $('.info').addClass('disabled');
    }
    prototype.calculateTheSum = function(num){
      var info;
      constructor.sum += parseInt(num);
      if (++constructor.numOfSumed === Buttons.buttons.length) {
        setClassAble($('.info'));
        info = $('.info');
        info[0].onclick = function(){
          prototype.showTheSum();
        };
      }
    };
    prototype.showTheSum = function(){
      $('.page').text(constructor.sum) && setClassDisabled($('.info'));
    };
    prototype.resetCalculator = function(){
      $('.page').text('') && (constructor.sum = constructor.numOfSumed = 0);
    };
    return Calculator;
  }());
  resetTheWhole = function(){
    var c, b, r;
    console.log('reset');
    c = new Calculator;
    b = new Buttons;
    r = new Robot;
    c.resetCalculator();
    b.resetButtons();
    return r.resetRobot();
  };
  setClassDisabled = function(x){
    return $(x).addClass('disabled') && $(x).removeClass('able');
  };
  setClassAble = function(x){
    return $(x).addClass('able') && $(x).removeClass('disabled');
  };
  Buttons = (function(){
    Buttons.displayName = 'Buttons';
    var prototype = Buttons.prototype, constructor = Buttons;
    Buttons.buttons = [];
    function Buttons(){
      var i$, ref$, len$, x;
      constructor.buttons = $('.button');
      for (i$ = 0, len$ = (ref$ = constructor.buttons).length; i$ < len$; ++i$) {
        x = ref$[i$];
        $(x).addClass('able') && (x.state = 'ready');
      }
    }
    prototype.bindClickToButtons = function(){
      var a, res$, i$, ref$, len$, i;
      res$ = [];
      for (i$ = 0, len$ = (ref$ = constructor.buttons).length; i$ < len$; ++i$) {
        res$.push((fn$.call(this, i$, ref$[i$])));
      }
      a = res$;
      i = 0;
      for (; i < a.length; i++) {
        a[i]();
      }
      function fn$(i, x){
        return function(){
          return x.onclick = function(){
            if (x.state === 'ready') {
              console.log('you have clicked ' + x.innerHTML + ' ' + x.state);
              prototype.getNumberForThisButton(x);
            }
          };
        };
      }
    };
    prototype.getNumberForThisButton = function(x){
      var ranNum;
      $(x).append("<span>...</span>");
      $(x).find('span').addClass('unread');
      ranNum = void 8;
      this.changeButtonsToDisabled(x);
      $.get('/', function(result){
        var ranNum, c;
        ranNum = result;
        $(x).find("span").text(ranNum);
        prototype.changeButtonsToAble(x);
        c = new Calculator;
        c.calculateTheSum(ranNum);
        getNext(x);
      });
    };
    prototype.changeButtonsToDisabled = function(x){
      var i$, ref$, len$, y;
      console.log('you are in change-buttons-to-disabled');
      for (i$ = 0, len$ = (ref$ = constructor.buttons).length; i$ < len$; ++i$) {
        y = ref$[i$];
        if (y.state === 'ready') {
          if (y !== x) {
            setClassDisabled(y) && (y.state = 'wait');
          }
        }
      }
    };
    prototype.changeButtonsToAble = function(x){
      var i$, ref$, len$, y;
      console.log('you are in change-buttons-to-able');
      x.state = 'done' && $(x).addClass('disabled') && $(x).removeClass('able');
      for (i$ = 0, len$ = (ref$ = constructor.buttons).length; i$ < len$; ++i$) {
        y = ref$[i$];
        if (y.state === 'wait') {
          setClassAble(y) && (y.state = 'ready');
        }
      }
    };
    prototype.resetButtons = function(){
      var i$, ref$, len$, y, results$ = [];
      $('.unread').remove();
      for (i$ = 0, len$ = (ref$ = Buttons.buttons).length; i$ < len$; ++i$) {
        y = ref$[i$];
        results$.push(setClassAble(y) && (y.state = 'ready'));
      }
      return results$;
    };
    return Buttons;
  }());
  getNext = function(x){
    var i$, ref$, len$, results$ = [];
    for (i$ = 0, len$ = (ref$ = Buttons.buttons).length; i$ < len$; ++i$) {
      if (ref$[i$] === x) {
        results$.push((fn$.call(this, i$, ref$[i$])));
      }
    }
    return results$;
    function fn$(i, y){
      var b, c;
      if (i !== Buttons.buttons.length - 1) {
        b = new Buttons;
        return b.getNumberForThisButton(Buttons.buttons[++i]);
      } else {
        c = new Calculator;
        return c.showTheSum();
      }
    }
  };
  $(function(){
    var b, robot;
    b = new Buttons;
    b.bindClickToButtons();
    robot = new Robot;
    robot.S2ClickButtonInOrder(b);
    $('#button').on('mouseleave', function(){
      resetTheWhole();
    });
  });
}).call(this);
