// Generated by LiveScript 1.3.1
var used, ch, order, order_list, interrupt, arise, sum, click_num, data, GetRandomNumber, Check, RandomOrder, Presetting, Robot, GetNum, Resetting;
$(function(){
  Resetting();
  Presetting();
});
used = [0, 0, 0, 0, 0, 0];
ch = ["S", "A", "B", "C", "D", "E"];
order = [-1, -1, -1, -1, -1];
order_list = "";
interrupt = 0;
arise = 0;
sum = 0;
click_num = 0;
data = {
  can_start: 1
};
GetRandomNumber = function(limit){
  return Math.round(Math.random() * limit);
};
Check = function(){
  var flag, i$, i;
  flag = 1;
  for (i$ = 1; i$ <= 5; ++i$) {
    i = i$;
    if (used[i] === 0) {
      flag = 0;
    }
  }
  return flag;
};
/* 构造随机序列 */
RandomOrder = function(){
  var position, num, i$, i;
  used = [0, 0, 0, 0, 0, 0];
  order = [-1, -1, -1, -1, -1];
  order_list = "";
  position = 0;
  num;
  while (Check() === 0) {
    num = GetRandomNumber(4) + 1;
    if (used[num] === 0) {
      used[num] = 1;
      order[position] = num;
      position++;
    }
  }
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    if (i < 4) {
      order_list += ch[order[i]];
      order_list += "+ ";
    } else {
      order_list += ch[order[i]];
    }
  }
};
/*预处理， 创建合法鼠标停留区域， 以及离开区域后的重设*/
Presetting = function(){
  var a_plus, buttons, r_numbers, i$, i;
  a_plus = document.getElementById("button");
  buttons = document.getElementsByTagName("ul");
  r_numbers = buttons[1].getElementsByTagName("li");
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    r_numbers[i].style.background = "#0044BB";
  }
  a_plus.onmouseover = function(){
    var area_, click_area_;
    this.id = "button_hover";
    area_ = document.getElementsByTagName("div")[0];
    area_.onmouseover = function(){
      this.id = "area";
      this.onmouseout = function(){
        var x, y, areax1, areax2, areay1, areay2;
        x = event.clientX;
        y = event.clientY;
        areax1 = this.offsetLeft;
        areax2 = this.offsetLeft + 350;
        areay1 = this.offsetTop;
        areay2 = this.offsetTop + 350;
        if (x >= areax2 || x < areax1 || y < areay1 || y >= areay2) {
          Resetting();
        }
      };
    };
    click_area_ = document.getElementById("click_area");
    click_area_.onclick = function(){
      if (data.can_start === 1) {
        RandomOrder();
        data.can_start = 0;
        interrupt = 0;
        Robot();
      }
    };
  };
};
/* 仿真机器人，依据随机序列， 依次点击小按钮 */
Robot = function(){
  var buttons, r_numbers, i$, i, r_sum;
  buttons = document.getElementsByTagName("ul");
  r_numbers = buttons[1].getElementsByTagName("li");
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    r_numbers[i].canclick = 1;
    r_numbers[i].have_number = 0;
  }
  r_sum = buttons[0].getElementsByTagName("li");
  r_sum[0].canclick = 0;
  r_sum[0].innerHTML = order_list;
  r_sum[0].style.fontSize = 100 + "%";
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    r_numbers[i].style.background = "#0044BB";
  }
  GetNum(r_numbers, click_num);
};
/* 核心步骤，申请随机数并填入小气泡 ，实时检测大气泡的激活条件*/
GetNum = function(allbuttons, times){
  var r, xmlhttp, i$, l;
  if (times < 5) {
    arise = 0;
    allbuttons[order[times] - 1].have_number = 1;
    r = allbuttons[order[times] - 1].getElementsByTagName("span")[0];
    r.style.display = "inline";
    r.innerHTML = "...";
    xmlhttp = null;
    for (i$ = 0; i$ <= 4; ++i$) {
      l = i$;
      allbuttons[l].style.background = "#666666";
      allbuttons[l].canclick = 0;
    }
    times++;
    xmlhttp = new XMLHttpRequest();
    if (xmlhttp !== null) {
      xmlhttp.open("get", "/", true);
      xmlhttp.send();
      xmlhttp.onreadystatechange = function(){
        var i$, l, buttons, r_numbers;
        if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
          if (interrupt === 1) {
            arise = 1;
            Resetting();
            return;
          }
          r.innerHTML = xmlhttp.responseText;
          sum += parseInt(r.innerHTML);
          for (i$ = 0; i$ <= 4; ++i$) {
            l = i$;
            if (allbuttons[l].have_number === 0) {
              allbuttons[l].style.background = "#0044BB";
              allbuttons[l].canclick = 1;
            }
          }
          if (times === 5) {
            arise = 1;
            buttons = document.getElementsByTagName("ul");
            r_numbers = buttons[0].getElementsByTagName("li");
            r_numbers[0].style.background = "#0044BB";
            r_numbers[0].canclick = 1;
            if (r_numbers[0].canclick === 1) {
              r_numbers[0].innerHTML = sum;
              r_numbers[0].style.fontSize = 300 + "%";
            }
          }
          GetNum(allbuttons, times);
        }
      };
    }
  }
};
/* 重置 */
Resetting = function(){
  var a_plus, area_, buttons, r_numbers, i$, i, r;
  interrupt = 1;
  sum = 0;
  click_num = 0;
  if (arise === 1) {
    data.can_start = 1;
  }
  a_plus = document.getElementsByTagName("div")[2];
  a_plus.id = "button";
  area_ = document.getElementsByTagName("div")[0];
  area_.id = "at-plus-container";
  buttons = document.getElementsByTagName("ul");
  r_numbers = buttons[1].getElementsByTagName("li");
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    r_numbers[i].canclick = 1;
    r_numbers[i].have_number = 0;
    r_numbers[i].style.background = "#0044BB";
    r = r_numbers[i].getElementsByTagName("span")[0];
    r.style.display = "none";
  }
  r_numbers = buttons[0].getElementsByTagName("li");
  r_numbers[0].style.background = "#666666";
  r_numbers[0].innerHTML = "";
  r_numbers[0].canclick = 0;
};