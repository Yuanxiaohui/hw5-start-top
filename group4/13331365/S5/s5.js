// Generated by LiveScript 1.3.1
(function(){
  var Button, robot, cumulator, addClickToFetchNumbersToAllButtons, addClickToCalcuSumToTheBubble, addResetWhenLeaveApb, addClickToIcon, reset;
  Button = (function(){
    Button.displayName = 'Button';
    var prototype = Button.prototype, constructor = Button;
    Button.FAILURERATE = 0.3;
    Button.buttons = [];
    Button.disableAllOtherButtons = function(thisButton){
      var i$, ref$, len$, button, results$ = [];
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== thisButton && button.state !== 'done') {
          results$.push(button.disable());
        }
      }
      return results$;
    };
    Button.enableAllOtherButtons = function(thisButton){
      var i$, ref$, len$, button, results$ = [];
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== thisButton && button.state !== 'done') {
          results$.push(button.enable());
        }
      }
      return results$;
    };
    Button.allButtonsDone = function(){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button.state !== 'done') {
          return false;
        }
      }
      return true;
    };
    Button.resetAll = function(){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        button.reset();
      }
    };
    function Button(dom, badMessage, goodMessage){
      var this$ = this;
      this.dom = dom;
      this.badMessage = badMessage;
      this.goodMessage = goodMessage;
      this.state = 'enabled';
      this.dom.addClass('enabled');
      this.name = this.dom.attr('title');
      this.dom.click(function(){
        if (this$.state === 'enabled') {
          this$.dom.find('.num').css("display", "inline");
          this$.constructor.disableAllOtherButtons(this$);
          this$.wait();
          this$.fetchNumberAndShow();
        }
      });
      this.constructor.buttons.push(this);
    }
    prototype.fetchNumberAndShow = function(){
      var this$ = this;
      $.get('/api/random', function(number, result){
        this$.done();
        if (this$.constructor.allButtonsDone()) {
          this$.constructor.allNumberFetchedCallback();
        }
        this$.constructor.enableAllOtherButtons(this$);
        this$.showNumber(number);
        this$.successOrFail();
        cumulator.add(number);
        robot.clickNext();
      });
    };
    prototype.successOrFail = function(){
      var isSuccess;
      if (isSuccess = Math.random() > this.constructor.FAILURERATE) {
        console.log("Button " + this.name + " say: " + this.goodMessage);
      } else {
        console.log("Handle error from " + this.name + ", message is: " + this.badMessage);
      }
    };
    prototype.showNumber = function(num){
      this.dom.find('.num').text(num);
    };
    prototype.disable = function(){
      this.state = 'disabled';
      this.dom.removeClass('enabled').addClass('disabled');
    };
    prototype.enable = function(){
      this.state = 'enabled';
      this.dom.removeClass('disabled').addClass('enabled');
    };
    prototype.wait = function(){
      this.state = 'waiting';
      this.dom.removeClass('enabled').addClass('waiting');
    };
    prototype.done = function(){
      this.state = 'done';
      this.dom.removeClass('waiting').addClass('done');
    };
    prototype.reset = function(){
      this.state = 'enabled';
      this.dom.removeClass('disabled waiting done').addClass('enabled');
      this.dom.find('.num').text('');
      this.dom.find('.num').css('display', 'none');
    };
    return Button;
  }());
  robot = {
    initial: function(){
      this.buttons = $('#control-ring .button');
      this.bubble = $('.info');
      this.sequence = ["A", "B", "C", "D", "E"];
      this.count = 0;
    },
    randomSequence: function(){
      this.buttons.sort(function(){
        return 0.5 - Math.random();
      });
    },
    clickNext: function(){
      if (this.count === this.sequence.length) {
        this.bubble.click();
      } else {
        this.getNextButton().click();
      }
      this.count++;
    },
    getNextButton: function(){
      return this.buttons[this.count];
    }
  };
  cumulator = {
    sum: 0,
    add: function(number){
      return this.sum += parseInt(number);
    },
    reset: function(){
      this.sum = 0;
    }
  };
  $(function(){
    robot.initial();
    addClickToFetchNumbersToAllButtons();
    addClickToCalcuSumToTheBubble();
    addClickToIcon();
    return addResetWhenLeaveApb();
  });
  addClickToFetchNumbersToAllButtons = function(){
    var goodMessages, badMessages, i$, ref$, len$, results$ = [];
    goodMessages = ['这是个天大的秘密', '我不知道', '你不知道', '他不知道', '才怪'];
    badMessages = ['这不是个天大的秘密', '我知道', '你知道', '他知道', '才怪'];
    for (i$ = 0, len$ = (ref$ = $('#control-ring .button')).length; i$ < len$; ++i$) {
      results$.push((fn$.call(this, i$, ref$[i$])));
    }
    return results$;
    function fn$(i, dom){
      var button;
      return button = new Button($(dom), goodMessages[i], badMessages[i]);
    }
  };
  addClickToCalcuSumToTheBubble = function(){
    var bubble;
    bubble = $('.info');
    bubble.addClass('disabled');
    Button.allNumberFetchedCallback = function(){
      bubble.removeClass('disabled').addClass('enabled');
    };
    return bubble.click(function(){
      if (bubble.hasClass('enabled')) {
        bubble.find('.sum').text(cumulator.sum);
      }
    });
  };
  addResetWhenLeaveApb = function(){
    $('#at-plus-container').on('mouseleave', function(){
      reset();
    });
  };
  addClickToIcon = function(){
    var icon;
    icon = $('.icon');
    icon.click(function(){
      robot.randomSequence();
      robot.clickNext();
    });
  };
  reset = function(){
    var bubble;
    cumulator.reset();
    Button.resetAll();
    bubble = $('.info');
    bubble.removeClass('enabled').addClass('disabled');
    bubble.find('.sum').text('');
    robot.count = 0;
  };
}).call(this);
