13331202 莫冠钊
Top实践报告：
	首先这次的作业我是用CoffeeScript来完成的。
	比起LiveScript，CoffeeScript的代码风格更接近于Python的风格，CoffeeScript对括号的规范十分严格，而且CoffeeScript调用函数时还是使用函数对象加'()'来完成，不像LiveScript那样直接用'!'。还有一点是CoffeeScript不允许随便使用'-'来命名，而恰恰LiveScript支持这命名规范。
	本次作业也采用了类来编写代码，并且对类里面的实例成员方法与成员变量还有静态方法与静态变量有了更加深入的了解，能够充分运用在代码的实现中。
	本次在coding期间发生了很多丢失this的bug，后来通过声明另外一个对象并用this赋值于它来解决这个问题。
	
	本次代码注重Top思想，对于作业的代码编写流程如下：
	1.把每个按钮以及大气泡的状态抽象成类名，并且每个状态赋予一定的样式
	2.记录一开始整个@-plus的状态，设置reset方法来还原该状态，当鼠标移离at-plus后调用reset。
	3.为按钮绑定click事件，当它为'enable'状态时才可触发：
		(1)刚开始按钮处于等待状态，此时按钮上面显示红色的'...'
		(2)灭活其他的按钮
		(3)向服务器发送请求，进行等待:
			a.当等待结束后，把返回的数字显示在按钮上，并且灭活本身
			b.激活其他按钮
			c.如果此时五个按钮都已经接收到数字后，激活大气泡
	4.为大气泡绑定click事件，当它为'enable'状态时才可触发:
		(1)把所有按钮得到的数字求和并显示在大气泡上
		(2)灭活大气泡
	5.S2,为@添加click事件，当它为'enable'状态时才可触发：
		(1)重置计算器，即把大气泡灭活，激活所有按钮并消除它获得的数字。
		(2)按顺序模拟点击按钮触发'click'事件，当服务器返回成功后继续模拟点击下一个按钮。
		(3)当所有按钮都成功接收服务器返回的数字后，激活大气泡，并且模拟点击大气泡触发'click'事件。

	6.S3,为@添加click事件，当它为'enable'状态时才可触发：
		(1)重置计算器，即把大气泡灭活，激活所有按钮并消除它获得的数字。
		(2)模拟同时按下所有按钮，各自等待服务器返回数字。
		(3)当所有按钮都成功接收服务器返回的数字后，激活大气泡，并且模拟点击大气泡触发'click'事件。

	6.S4,为@添加click事件，当它为'enable'状态时才可触发：
		(1)重置计算器，即把大气泡灭活，激活所有按钮并消除它获得的数字。
		(2)生成一段触发按钮的顺序(如,B、C、A、D、E)。
		(3)把这顺序显示在大气泡上。
		(4)按照这顺序模拟逐个点击按钮。
		(4)当所有按钮都成功接收服务器返回的数字后，激活大气泡，并且模拟点击大气泡触发'click'事件。

	6.S5,为@添加click事件，当它为'enable'状态时才可触发：
		(1)重置计算器，即把大气泡灭活，激活所有按钮并消除它获得的数字。
		(2)生成一段触发按钮的顺序(如,B、C、A、D、E)。
		(3)把这顺序显示在大气泡上。
		(4)按照这顺序模拟逐个点击按钮，每次触发事件都要传入当前获得的所有数字总和。
		(5)每个按钮在服务器返回后，要在上述顺序的上面显示message，包括正常和异常。
		(4)生成随机数，对这个随机数进行判断来断定事件是否发生异常，如果发生异常，throw出message和currentSum。
		(5)发生异常后，把接收到的message和currentSum显示在控制台上。
		(6)当所有按钮都完成向服务器发送请求后，激活大气泡，模拟点击大气泡，把获得的所有数字总和显示在大气泡上，并显示相应的message。