// Generated by CoffeeScript 1.9.1
(function() {
  var $, $$, Sum, disableOtherButtons, enableOtherButtons, getRNumAtTheSameTime, getRandomNumber, getRandomNumberFromServer, getRandomNumbers, isInfo_barActive, resetCalculator, returnRandomNumber;

  $ = function(id) {
    return document.getElementById(id);
  };

  $$ = function(classN) {
    return document.getElementsByClassName(classN);
  };

  window.onload = function() {
    var buttons, info_bar;
    info_bar = $('info-bar');
    buttons = $$('button');
    $$('apb').disabled = 0;
    $('apb').onclick = function() {
      this.disabled = 1;
      return getRNumAtTheSameTime();
    };
    getRandomNumbers();
    return $('bottom-positioner').onmouseleave = resetCalculator;
  };

  getRandomNumbers = function() {
    var button, buttons, i, info_bar, len, results;
    info_bar = $('info-bar');
    buttons = $$('button');
    results = [];
    for (i = 0, len = buttons.length; i < len; i++) {
      button = buttons[i];
      results.push(button.onclick = function() {
        return getRandomNumber(buttons, this.id);
      });
    }
    return results;
  };

  getRNumAtTheSameTime = function() {
    var button, buttons, i, info_bar, len, results;
    info_bar = $('info-bar');
    buttons = $$('button');
    $('apb').disabled = 1;
    results = [];
    for (i = 0, len = buttons.length; i < len; i++) {
      button = buttons[i];
      results.push(getRandomNumber(buttons, button.id));
    }
    return results;
  };

  getRandomNumber = function(buttons, id) {
    var button;
    button = $(id);
    button.childNodes[1].classList.add('opacity');
    button.childNodes[1].innerHTML = "...";
    disableOtherButtons(buttons, id);
    return getRandomNumberFromServer(id);
  };

  getRandomNumberFromServer = function(id) {
    var realUrl, xmlhttp;
    xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
      if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
        returnRandomNumber(xmlhttp.responseText, id);
        return xmlhttp = null;
      }
    };
    realUrl = '../server' + "?time=" + new Date().getTime();
    realUrl = encodeURI(encodeURI(realUrl));
    xmlhttp.open('GET', realUrl, true);
    return xmlhttp.send();
  };

  returnRandomNumber = function(rNum, id) {
    var buttons, clickedButton, info_bar;
    clickedButton = $(id);
    buttons = $$('button');
    info_bar = $('info-bar');
    clickedButton.childNodes[1].innerHTML = rNum;
    clickedButton.classList.add('grey');
    clickedButton.disabled = 1;
    enableOtherButtons(buttons, clickedButton);
    return isInfo_barActive(info_bar, buttons);
  };

  disableOtherButtons = function(buttons, id) {
    var button, clickedButton, i, len, results;
    clickedButton = $(id);
    results = [];
    for (i = 0, len = buttons.length; i < len; i++) {
      button = buttons[i];
      if (!(button !== clickedButton)) {
        continue;
      }
      button.disabled = 1;
      results.push(button.classList.add('grey'));
    }
    return results;
  };

  enableOtherButtons = function(buttons, clickedButton) {
    var button, i, len, results;
    results = [];
    for (i = 0, len = buttons.length; i < len; i++) {
      button = buttons[i];
      if (button !== clickedButton && !button.childNodes[1].classList.contains('opacity')) {
        button.disabled = 0;
        results.push(button.classList.remove('grey'));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  isInfo_barActive = function(info_bar, buttons) {
    var button, flag, i, len;
    flag = true;
    for (i = 0, len = buttons.length; i < len; i++) {
      button = buttons[i];
      if (button.childNodes[1].innerHTML === '' || button.childNodes[1].innerHTML === '...') {
        flag = false;
      }
    }
    if (flag === true) {
      info_bar.disabled = 0;
      info_bar.classList.remove('grey');
      info_bar.onclick = Sum;
      Sum();
    }
    return flag;
  };

  Sum = function() {
    var button, buttons, i, info_bar, len, sum;
    sum = 0;
    buttons = $$('button');
    info_bar = $('info-bar');
    for (i = 0, len = buttons.length; i < len; i++) {
      button = buttons[i];
      sum += parseInt(button.childNodes[1].innerHTML);
    }
    info_bar.innerHTML = sum;
    info_bar.disable = 1;
    info_bar.classList.add('grey');
    return $('button').onmouseout = resetCalculator;
  };

  resetCalculator = function() {
    var apb, button, buttons, i, info_bar, len, results;
    info_bar = $('info-bar');
    info_bar.disabled = 1;
    info_bar.innerHTML = '';
    info_bar.classList.toggle('grey', true);
    apb = $('apb');
    apb.disabled = 0;
    buttons = $$('button');
    results = [];
    for (i = 0, len = buttons.length; i < len; i++) {
      button = buttons[i];
      button.classList.toggle('grey', false);
      button.childNodes[1].classList.toggle('opacity', false);
      results.push(button.disabled = 0);
    }
    return results;
  };

}).call(this);
